public class Solution {
    public int searchMatrix(int[][] A, int B) {
        
        int n = A.length;
        int m = A[0].length;
        
        // for(int i=0; i<n; i++){  // BF
        //     for(int j=0; j<m; j++){
        //         if(A[i][j] == B) return 1;
        //     }
        // }
        // return 0;
        
        int row = -1;
        for(int i=0; i<n; i++){
            if(B < A[i][m-1]){
                row = i;
                break;
            } 
            else if(B == A[i][m-1]) return 1;
        }
        if(row == -1) return 0;
        
        return binarySearch(A, 0, m-1, B, row);
        
    }
    int binarySearch(int C[][], int low, int high, int target, int row){
        
        while(low<=high){
            int mid =(low+high)/2;
            
            if(C[row][mid] == target) return 1;
            if(C[row][mid] > target) high = mid-1;
            if(C[row][mid] < target) low = mid+1;
        }
        return 0;
    }
}
